import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { TTS } from './schema/tts.schema';
import { ttsDto } from './dto/tts.dto';
const Replicate = require('replicate');

@Injectable()
export class TTSService {
  private replicate;

  constructor(
    @InjectModel(TTS.name)
    private readonly ttsModel: Model<TTS>,
  ) {
    this.replicate = new Replicate({
      auth: 'r8_06l6hwas5tCLkIEaTteQsVhantyhuU90rYoZo',
    });
  }

  async input(ttDto: ttsDto): Promise<TTS> {
    const { text, option } = ttDto;
    const texts: string = text.toString();
    let options: string = option;

    const input: any = new this.ttsModel(ttDto);
    const data = await input.save(); // save in data base

    if (options && texts) {
      // tts running
      try {
        let image;
        if (options == 'Wajahat') {
          image =
            'https://replicate.delivery/pbxt/AhyW2pIU9G5PAVBwZIGI4TEqHCHJUYNUmvUz7fb7aoB78WVJA/tmpisppivsyfile%20%28wajahat_qazi%20Ver%29.mp3';
        } else if (options == 'Trump') {
          image =
            'https://replicate.delivery/pbxt/235fJealHPlzgEsX0mwWwJQFkUKeHQmOYNjO5dUSQYeOUoiKB/tmpugf8hnq9file_stereo%20%28Trump%20Ver%29.mp3';
        } else if (options == 'Talha') {
          image =
            'https://replicate.delivery/pbxt/nKEq0YvtDI5bKRJFAQregLiaBYEYy1nkzdVU2girVo769fqSA/tmpd2dqxp2pfile_stereo%20%28muhammad_talha%20Ver%29.mp3';
        }

        const input = {
          speaker: image,
          text: texts,
          language: 'en',
          cleanup_voice: false,
        };

        console.log('Input Provided, Wait Now for tts');
        const output = await this.replicate.run(
          'lucataco/xtts-v2:684bc3855b37866c0c65add2ff39c78f3dea3f4ff103a436465326e0f438d55e',
          { input },
        );

        console.log('Output Generated by xtts: ');
        console.log(output);

        if (output) {
          let input;
          switch (options) {
            case 'Wajahat':
              input = {
                rvc_model: 'CUSTOM',
                custom_rvc_model_download_url:
                  'https://replicate.delivery/pbxt/eDqhKrXNU7UxESSEve5MJTtyFr2wFeReNUfKY1mSycmqP87UC/wajahat_qazi.zip',
                song_input: output,
                main_vocals_volume_change: 12,
              };
              break;

            case 'Talha':
              input = {
                rvc_model: 'CUSTOM',
                custom_rvc_model_download_url:
                  'https://replicate.delivery/pbxt/th8nPe0sP700PyTFZlepuioHgmSlFcKGhLoY8tSVkLuGMeVlA/muhammad_talha.zip',
                song_input: output,
                main_vocals_volume_change: 12,
              };
              break;

            default:
              input = {
                rvc_model: options,
                song_input: output,
                main_vocals_volume_change: 10,
              };
              break;
          }

          console.log('Input Provided, Wait Now for complete xtts');
          const output1 = await this.replicate.run(
            'zsxkib/realistic-voice-cloning:0a9c7c558af4c0f20667c1bd1260ce32a2879944a0b9e44e1398660c077b1550',
            { input },
          );

          console.log('Output Generated by complete tts: ');
          console.log(output1);

          image = undefined;
          options = undefined;
          return output1;
        } else {
          console.log('plx give me complete input');
        }
      } catch (error) {
        console.error('Error while running Replicate:', error);
        throw new Error('Error while running Replicate.');
      }
    } else {
      console.log('No Input Provided');
    }

    return data;
  }
}
